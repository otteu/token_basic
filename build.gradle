buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}


plugins {

	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

//	querydsl
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'

}


group = 'com.delivery'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

ext["hibernate.version"] = "5.6.5.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// querydsl
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
//	implementation 'com.querydsl:querydsl-jpa'
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// h2
	runtimeOnly 'com.h2database:h2'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
//	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
//	implementation 'io.springfox:springfox-boot-starter:3.0.0'


	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//clean {
//	delete file('src/main/generated')
//}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝